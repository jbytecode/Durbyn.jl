
@testset "compute_q0 correctness" begin
    phi = collect(1:10)
    theta = collect(1:10)
    x = compute_q0(phi, theta)

    phi = vec(1:10)
    theta = vec(1:10)
    x = compute_q0(phi, theta)

    expected = [
        -3.07619732 1.11465544 2.11357369 3.15204201 4.19013718 5.22823588 6.26633453 7.30443355 8.34249459 9.38458115 10.0;
        1.11465544 -3.22931088 1.92416552 2.84615733 3.80807237 4.76961073 5.73115265 6.69269418 7.65427405 8.61179041 10.0;
        2.11357369 1.92416552 -0.37881633 5.73654439 7.62116681 9.54570541 11.46986742 13.39403227 15.31827268 17.23450038 20.0;
        3.15204201 2.84615733 5.73654439 4.39470753 11.47233269 14.31920899 17.20600158 20.09241650 22.97894820 25.85347889 30.0;
        4.19013718 3.80807237 7.62116681 11.47233269 11.09276725 19.13264974 22.94178352 26.79083216 30.63965504 34.47249261 40.0;
        5.22823588 4.76961073 9.54570541 14.31920899 19.13264974 19.71534157 28.71748151 33.48887095 38.30036514 43.09150596 50.0;
        6.26633453 5.73115265 11.46986742 17.20600158 22.94178352 28.71748151 30.26243080 40.22682604 45.96069867 51.71052289 60.0;
        7.30443355 6.69269418 13.39403227 20.09241650 26.79083216 33.48887095 40.22682604 42.73402992 53.66094562 60.32916003 70.0;
        8.34249459 7.65427405 15.31827268 22.97894820 30.63965504 38.30036514 45.96069867 53.66094562 57.13074521 68.98805242 80.0;
        9.38458115 8.61179041 17.23450038 25.85347889 34.47249261 43.09150596 51.71052289 60.32916003 68.98805242 73.38026771 90.0;
        10.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0
    ]

    @test isapprox(x, expected, atol=2e-5)
end
