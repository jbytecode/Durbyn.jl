@testset "Guerrero Tests" begin
    # Test 1: Guerrero method for air passengers data
    ap = air_passengers()
    
    # Expected value from the Guerrero method
    expected_value = -0.2947236420175043
    
    # Calculate the Guerrero value and check if it matches the expected value
    @test guerrero(ap, 12) ≈ expected_value atol=1e-10
end

@testset "box_cox_lambda Tests" begin

    # Test 1: Empty vector (edge case)
    @test_throws MethodError box_cox_lambda([], 12)

    # Test 2: Single value vector (edge case)
    x_single = [1.0]
    @test box_cox_lambda(x_single, 12) == 1.0

    # Test 3: Non-seasonal data (m = 1, is_ts = false)
    x_nonseasonal = rand(100)
    λ_nonseasonal = box_cox_lambda(x_nonseasonal, 1; method="guerrero", is_ts=false)
    @test λ_nonseasonal isa Float64

    # Test 4: Seasonal data with the "guerrero" method
    x_seasonal = rand(120) + sin.(2 * π * (1:120) / 12)
    λ_seasonal_guerrero = box_cox_lambda(x_seasonal, 12; method="guerrero")
    @test λ_seasonal_guerrero isa Float64
    
    # Test 5: Seasonal data with the "loglik" method
    ap = air_passengers()
    λ_seasonal_loglik = box_cox_lambda(ap, 12; method="loglik")
    @test λ_seasonal_loglik == 0.2

    # Test 6: Seasonal data with the "guerrero" method
    λ_seasonal_guerrero = box_cox_lambda(ap, 12; method="guerrero")
    @test λ_seasonal_guerrero == -0.2947236420175043
    
    # Test 7: Lower and upper bounds (testing boundaries)
    λ_boundaries = box_cox_lambda(ap, 12; method="guerrero", lower=-5.0, upper=5.0)
    @test λ_boundaries == -0.29472364042783594
    @test λ_boundaries >= -5.0 && λ_boundaries <= 5.0

    # Test 8: Seasonal data with extreme λ bounds (edge case)
    λ_extreme_bounds = box_cox_lambda(ap, 12; method="loglik", lower=-1000.0, upper=1000.0)
    @test λ_extreme_bounds == -1000.0
    @test λ_extreme_bounds >= -1000.0 && λ_extreme_bounds <= 1000.0
    
    # Test 9: Seasonal data with nonseasonal_length specified
    λ_nonseasonal_length = box_cox_lambda(ap, 12; method="guerrero", nonseasonal_length=5)
    @test λ_nonseasonal_length == -0.2947236420175043
end

# Assuming box_cox_lambda is implemented and available

@testset "box_cox function tests" begin

    # Test 1: Normal case with automatic lambda selection ("auto")
    x = air_passengers()
    result_auto, lambda = box_cox(x, 12, lambda="auto")
    
    # Check if the result is the same length as the input
    @test length(result_auto) == length(x)
    @test lambda == -0.2947236438312951
    
    # Check if result is numeric and a vector
    @test result_auto isa AbstractVector
    @test all(isfinite, result_auto)

    # Test 2: Explicit lambda (lambda = 0, log transformation)
    result_log, lambda = box_cox(x, 12, lambda=0)
    
    # Check if log transformation is applied correctly (Box-Cox with lambda=0 is log)
    @test result_log ≈ log.(x) atol=1e-10
    
    # Test 3: Small vector with explicit lambda
    x_small = [1.0, 2.0, 3.0]
    result_small, lambda = box_cox(x_small, 12, lambda=0.5)
    
    # Check if result is the same length as input
    @test length(result_small) == length(x_small)
    
    # Test 4: Empty vector (edge case)
    @test_throws MethodError box_cox([], 12, lambda="auto")

    # Test 5: Single value vector (edge case)
    x_single = [2.0]
    result_single, lambda = box_cox(x_single, 12, lambda="auto")
    
    # Check if the result for single value vector is valid
    @test length(result_single) == length(x_single)
    
    # Test 6: Test for non-numeric lambda input (invalid case)
    @test_throws MethodError box_cox(x, 12, lambda="invalid_lambda")
end

# Assuming box_cox_lambda is implemented and available
@testset "box_cox function tests" begin
    # Test 1: Normal case with automatic lambda selection ("auto")
    x = air_passengers()
    result_auto, lambda = box_cox(x, 12, lambda="auto")
    inv_result_auto = inv_box_cox(result_auto, lambda = lambda)
    
    # Check if the result is the same length as the input
    @test x ≈ inv_result_auto atol=1e-10
fitted = [19.184463868808404, 19.743866735649775, 20.993457352528797, 20.72778957492687, 20.0096258595717, 21.2455039392635, 22.337053014784253,
    22.335788373712482, 21.327547462906033, 19.820376073324923, 18.398407902308232, 19.727399896505467, 19.163771239580647, 19.782385902829354, 
    21.175000809654392, 21.0334786258604, 20.36202061724653, 21.600603202389774, 22.86318436543941, 23.117193210691013, 22.311956729175773,
    20.979859525616654, 19.578092577694616, 20.861575328176862, 20.522178292405826, 21.484424329332004, 22.931881130472544, 22.96248819358109, 
    22.32837875993391, 24.12650105043609, 25.41936935991997, 25.535555701967247, 24.64470975621807, 23.092206625790773, 21.68583672879118, 
    23.321439849937146, 23.060840323947577, 23.815207909284783, 25.41152763396634, 24.91941200878045, 24.427516847450818, 25.69048219880166,
    27.29521796538462, 27.440129727797746, 26.718215551636465, 25.083104870246515, 23.740254331495823, 25.37136765609707, 25.248038909567732, 
    25.91665047899082, 27.189265289533257, 26.860131190883248, 26.874586176497445, 28.541682301428224, 29.73728615741141, 29.950198375594873, 
    28.799417850809398, 27.19284105091121, 25.69052825462711, 27.039372929697546, 26.723616299351338, 27.06690176873077, 28.268636364520045, 
    27.751083715691543, 27.386595660074228, 28.86165318905491, 30.28898646730103, 30.913839883570617, 29.616675441418337, 28.105547613516467, 
    26.523695649134652, 28.080460013101106, 28.05234638137896, 28.353437740026727, 30.342932148916688, 29.815865535009003, 29.74283972334509, 
    31.286280479926376, 32.99999819073811, 33.540030310838205, 32.17628495917684, 30.70472082005153, 29.13654543517986, 30.670218100027398, 
    30.918993904168104, 30.986623513274726, 33.034192808650374, 32.68650470801758, 32.58046596129369, 34.33400095620146, 36.26492297962906,
    36.35503754782343, 34.91416439276685, 33.213263133754104, 31.364089847129318, 33.08196906689331, 33.19148029426548, 33.06071359983308, 35.02450822561809,
    34.72843441926837, 34.675735007306216, 36.66486244245476, 38.61862764461609, 38.63856858988865, 37.11585053143086, 35.282344659017916, 33.43325217477615, 
    35.20685268545138, 35.303007283128466, 34.88631262959201, 36.884768303089515, 36.23992386076222, 35.95525158763545, 38.04573815504377, 39.85867922739008, 
    39.881011949717646, 38.158437164728, 35.88673876287948, 33.9475994930455, 35.66497414921395, 35.70104495906626, 35.26393852161377, 37.537428068204655, 
    37.2061070199002, 37.45732844301083, 40.141538007050386, 42.04098858316372, 42.25076425359538, 39.91844939809705, 37.863839449355964, 35.8772411433996, 
    37.74168581564587, 38.32179933856539, 37.839410226511276, 40.318632781265514, 39.508518920713115, 40.118467207582036, 42.718017644985096, 44.959296981037774, 
    45.25065679728265, 42.31596106537755, 40.05959981421139, 38.092947850120986, 39.86382188340282]
lambda = 0.5
biasadj = false
fvar = 0.8885262743883137

tdata = inv_box_cox(fitted, lambda = lambda, biasadj = biasadj, fvar = fvar)
expected = [112.195377352212, 118.198935154424, 132.17477025564, 129.138104740539, 121.105907619582, 135.088363347579, 
    148.073037361105, 148.05764894253, 136.043617658533, 119.032202995333, 104.023761237238, 118.019976565666, 
    111.976303270325, 118.618083904945, 134.27016563187, 132.635284401992, 125.01499152154, 139.247117879163, 
    154.544484197458, 157.718348695796, 147.767810000329, 132.018485954269, 116.40351982289, 130.662906621476,
    126.812128758729, 137.87954652003, 155.399674176003, 155.781454203669, 147.967503271701, 170.64851428461,
    187.955454023929, 189.551706954035, 177.485139498276, 157.404708337845, 140.254715385738, 160.293829018496, 
    157.011429435599, 166.6062398499, 187.847961806925, 181.163685724618, 174.603411680574, 191.690701100538, 
    214.552448909848, 216.68030959739, 206.183976117564, 183.373642353193, 165.640173262522, 187.297941841309, 
    185.613906104329, 194.834843491535, 213.003302035688, 208.226793088748, 208.435431715994, 233.198589450344, 
    251.813833159354, 255.203794059966, 237.151034987189, 213.055492155942, 191.691338755076, 210.821295037513, 206.26153332809,
    211.221194608261, 229.047586841886, 221.281745564522, 215.893001122173, 238.110409390376, 260.644661771387, 270.830213970331,
    249.903541491996, 226.585999277427, 203.400303371116, 226.208518649944, 225.785880756595, 230.33279565942, 261.516314997357,
    253.062324935443, 251.901968425494, 276.994117047082, 306.249968337918, 315.773438623825, 292.004613402714, 267.399690979378,
    242.371115409255, 266.835787675839, 270.915039915664, 272.029332701632, 306.848666438422, 300.788402214831, 298.952156525048,
    330.039906371312, 366.051082659236, 367.777226323736, 340.663883204054, 309.993475131751, 278.290622831829, 307.686138402615,
    309.610071325419, 307.31340953238, 342.703552337215, 337.244473722624, 336.277384581537, 373.742896923487, 412.468227932993,
    412.873314258771, 382.51244069931, 347.49330581845, 313.87883992032, 346.08747168922, 347.878588091284, 340.150014852, 378.006301496239,
    365.572944219223, 360.150280770176, 400.915286095582, 438.037256665384, 438.504790483098, 403.175018878352, 358.851243521669, 323.057477328101, 
    354.662569415239, 355.342197751384, 347.150278535653, 390.802054562114, 384.279706913967, 389.220191964908, 443.977306399918, 484.902168845589,
    489.532534256819, 439.289099985206, 397.281423911007, 358.671349158811, 394.850397867377, 406.461875474883, 396.794651799063, 447.7166701189,
    430.7392857478, 443.491319979041, 499.9252755243, 551.293893238326, 558.156141943648, 490.976101287015, 442.252484132903, 401.86111682813, 438.144895671319]

@test isapprox(tdata, expected, rtol=1e-4)

expected = [112.417508920809, 118.421066723021, 132.396901824237, 129.360236309136, 121.328039188179, 135.310494916176, 148.295168929702, 148.279780511127, 
        136.26574922713, 119.25433456393, 104.245892805835, 118.242108134264, 112.198434838922, 118.840215473542, 134.492297200468, 132.857415970589, 
        125.237123090137, 139.46924944776, 154.766615766055, 157.940480264393, 147.989941568926, 132.240617522866, 116.625651391487, 130.885038190073, 
        127.034260327326, 138.101678088627, 155.6218057446, 156.003585772266, 148.189634840298, 170.870645853207, 188.177585592527, 189.773838522632, 
        177.707271066873, 157.626839906442, 140.476846954335, 160.515960587093, 157.233561004196, 166.828371418497, 188.070093375522, 181.385817293215, 
        174.825543249171, 191.912832669135, 214.774580478446, 216.902441165987, 206.406107686161, 183.59577392179, 165.862304831119, 187.520073409906, 
        185.836037672926, 195.056975060132, 213.225433604285, 208.448924657345, 208.657563284591, 233.420721018941, 252.035964727952, 255.425925628563,
        237.373166555786, 213.277623724539, 191.913470323673, 211.04342660611, 206.483664896688, 211.443326176858, 229.269718410483, 221.503877133119, 
        216.11513269077, 238.332540958973, 260.866793339984, 271.052345538928, 250.125673060593, 226.808130846024, 203.622434939713, 226.430650218541, 
        226.008012325192, 230.554927228017, 261.738446565954, 253.284456504041, 252.124099994091, 277.216248615679, 306.472099906515, 315.995570192422, 
        292.226744971311, 267.621822547975, 242.593246977852, 267.057919244437, 271.137171484261, 272.251464270229, 307.07079800702, 301.010533783428, 
        299.174288093645, 330.262037939909, 366.273214227833, 367.999357892333, 340.886014772651, 310.215606700349, 278.512754400427, 307.908269971212, 
        309.832202894016, 307.535541100977, 342.925683905812, 337.466605291221, 336.499516150134, 373.965028492084, 412.69035950159, 413.095445827368, 
        382.734572267907, 347.715437387048, 314.100971488917, 346.309603257817, 348.100719659881, 340.372146420597, 378.228433064836, 365.79507578782, 360.372412338773, 
        401.137417664179, 438.259388233981, 438.726922051695, 403.397150446949, 359.073375090266, 323.279608896698, 354.884700983836, 355.564329319981, 347.37241010425,
        391.024186130711, 384.501838482564, 389.442323533505, 444.199437968515, 485.124300414186, 489.754665825416, 439.511231553803, 397.503555479604, 358.893480727408, 
        395.072529435974, 406.68400704348, 397.01678336766, 447.938801687497, 430.961417316397, 443.713451547638, 500.147407092897, 551.516024806923, 558.378273512245, 
        491.198232855612, 442.4746157015, 402.083248396727, 438.367027239916]


biasadj = true

tdata = inv_box_cox(fitted, lambda = lambda, biasadj = biasadj, fvar = fvar)
@test isapprox(tdata, expected, rtol=1e-4)


expected = [112.195377352212, 118.198935154424, 132.17477025564, 129.138104740539, 121.105907619582, 135.088363347579, 148.073037361105, 148.05764894253, 136.043617658533, 
        119.032202995333, 104.023761237238, 118.019976565666, 111.976303270325, 118.618083904945, 134.27016563187, 132.635284401992, 125.01499152154, 139.247117879163, 154.544484197458,
        157.718348695796, 147.767810000329, 132.018485954269, 116.40351982289, 130.662906621476, 126.812128758729, 137.87954652003, 155.399674176003, 155.781454203669, 147.967503271701,
        170.64851428461, 187.955454023929, 189.551706954035, 177.485139498276, 157.404708337845, 140.254715385738, 160.293829018496, 157.011429435599, 166.6062398499, 187.847961806925,
        181.163685724618, 174.603411680574, 191.690701100538, 214.552448909848, 216.68030959739, 206.183976117564, 183.373642353193, 165.640173262522, 187.297941841309, 185.613906104329,
        194.834843491535, 213.003302035688, 208.226793088748, 208.435431715994, 233.198589450344, 251.813833159354, 255.203794059966, 237.151034987189, 213.055492155942, 191.691338755076,
        210.821295037513, 206.26153332809, 211.221194608261, 229.047586841886, 221.281745564522, 215.893001122173, 238.110409390376, 260.644661771387, 270.830213970331, 249.903541491996, 
        226.585999277427, 203.400303371116, 226.208518649944, 225.785880756595, 230.33279565942, 261.516314997357, 253.062324935443, 251.901968425494, 276.994117047082, 306.249968337918, 
        315.773438623825, 292.004613402714, 267.399690979378, 242.371115409255, 266.835787675839, 270.915039915664, 272.029332701632, 306.848666438422, 300.788402214831, 298.952156525048, 
        330.039906371312, 366.051082659236, 367.777226323736, 340.663883204054, 309.993475131751, 278.290622831829, 307.686138402615, 309.610071325419, 307.31340953238, 342.703552337215,
        337.244473722624, 336.277384581537, 373.742896923487, 412.468227932993, 412.873314258771, 382.51244069931, 347.49330581845, 313.87883992032, 346.08747168922, 347.878588091284, 340.150014852,
        378.006301496239, 365.572944219223, 360.150280770176, 400.915286095582, 438.037256665384, 438.504790483098, 403.175018878352, 358.851243521669, 323.057477328101, 354.662569415239, 355.342197751384, 
        347.150278535653, 390.802054562114, 384.279706913967, 389.220191964908, 443.977306399918, 484.902168845589, 489.532534256819, 439.289099985206, 397.281423911007, 358.671349158811, 394.850397867377, 
        406.461875474883, 396.794651799063, 447.7166701189, 430.7392857478, 443.491319979041, 499.9252755243, 551.293893238326, 558.156141943648, 490.976101287015, 442.252484132903, 401.86111682813, 438.144895671319]
    
biasadj = false
fvar = nothing
tdata = inv_box_cox(fitted, lambda = lambda, biasadj = biasadj, fvar = fvar)
@test isapprox(tdata, expected, rtol=1e-4)
end